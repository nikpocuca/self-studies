[
["ss.html", "1 Self Studies", " 1 Self Studies A collection of statistical interests "],
["god-hates-rich-people.html", "God Hates Rich People Introduction Preliminary Analysis Therefore neither rich people or poor people are more likely to be hit with extreme weather events.", " God Hates Rich People July 23, 2018 A self-study on extreme weather events locations vs Low/High Income locations. Introduction Extreme weather events in the U.S. are regularly tracked by the National Oceanic and Atomspheric Administration (NOAA). The NCDC Storm Events database is provided by the National Weather Service (NWS) and contain statistics on personal injuries and damage estimates. (ref. gov.noaa.ncdc:C00510). The question is, are high-income or low-income households more susceptible to extreme weather events? The US Household Income dataset provided by Golden Oak Research Group contains 32,000 records on US Household Income Statistics &amp; Geo Locations. The dataset originally developed for real estate and business investment research. Income is a vital element when determining both quality and socioeconomic features of a given geographic location. (ref. Golden Oak Research Group, LLC. “U.S. Income Database Kaggle”. Publication: 5, August 2017.) Preliminary Analysis ## Loading packages library(ggplot2) library(ggmap) library(maps) library(mapdata) ## Loading csv data. strmEvents &lt;- read.csv(&quot;StormEvents_locations-ftp_v1.0_d2014_c20180718.csv&quot;) incomeKag &lt;- read.csv(&quot;kaggle_income.csv&quot;) # load U.S, map and plot extreme events. usa &lt;- map_data(&quot;usa&quot;) gg1 &lt;- ggplot() + geom_polygon(data = usa, aes(x=long, y = lat, group = group)) + coord_fixed(1.3) # I need to only get mainland U.S. onlyUS &lt;- subset(strmEvents, (LONGITUDE &gt; -140 &amp; LONGITUDE &lt; -50 &amp; LATITUDE &lt; 50 &amp; 20 &lt; LATITUDE )) # Coordinate data preperation for plotting. corStrmEvents &lt;- data.frame(lat = onlyUS$LATITUDE, long = onlyUS$LONGITUDE, names = onlyUS$EVENT_ID, stringsAsFactors = FALSE) # Plotting gg1 + geom_point(data = corStrmEvents, aes(x = long, y = lat), color = &quot;red&quot;, size = exp(-100)) As we can see extreme weather events span the entire mainland U.S. Majority of the events are held along the eastern seaboard. We then superimpose the dataset of US income where blue is the poverty line ( &lt; $25,000 USD) and green is the upper middle class ( $100,000 &gt; ). poorPeople &lt;- subset(incomeKag, Lon &gt; -140 &amp; Mean &lt; 25000 &amp; Lat &gt; 20 &amp; Lat &lt; 50) corPoorPeople &lt;- data.frame(lat = poorPeople$Lat, long = poorPeople$Lon, names= poorPeople$Place, stringsAsFactors = FALSE) richPeople &lt;- subset(incomeKag, Lon &gt; -140 &amp; Mean &gt; 100000 &amp; Lat &gt; 20 &amp; Lat &lt; 50) corRichPeople &lt;- data.frame(lat = richPeople$Lat, long = richPeople$Lon, names = richPeople$Place, stringsAsFactors = FALSE) gg2 = ggplot() + geom_polygon(data = usa, aes(x=long, y = lat, group = group)) + coord_fixed(1.3) + geom_point(data = corPoorPeople, aes(x = long, y = lat, group = &quot;Poverty Class&quot;), color = &quot;blue&quot;, size = 1) + geom_point(data = corStrmEvents, aes(x = long, y = lat, group = &quot;Extreme Weather Events&quot;), color = &quot;red&quot;, size = 0.0001) + geom_point(data = corRichPeople, aes(x = long, y = lat, group = &quot;Upper Middle Class&quot;),color = &quot;green&quot;, size = 1) gg2 We can see that most of the green (rich) points are clustered around the major cities, while the blue (poor) points are fairly spread with some clumping. Now we simply do a calculation of the minimum distance between every green point to red point, and then every blue point to red point. (ie, find the closest weather event to each income datapoint.) To do this, I create a function called calcDistance which takes in a person, and a weather list object that has both longitude and latitude. # Calculate the distance for each poor person and rich person # to the nearest extreme weather event. calcDistance &lt;- function(person,weather) { xE = weather$long yE = weather$lat xS = person$long yS = person$lat # Pythogram Theorem. (I know the earth is a curved surface but # the curvature should be negligable if the locations are sufficiently close) return(distance = (xE - xS)^2 + (yE - yS)^2) } poorDistances &lt;- c() for (i in 1:length(corPoorPeople[,1])){ poorDistances &lt;- append(poorDistances,min(calcDistance(corPoorPeople[i,],corStrmEvents))) } richDistances &lt;- c() for (i in 1:length(corRichPeople[,1])){ richDistances &lt;- append(richDistances,min(calcDistance(corRichPeople[i,],corStrmEvents))) } Now that we have the distance to the nearest weather point we simply do a summary of both the rich and the poor distances. # Convert from latitude/longitutde to km for sanity. summary(poorDistances*110.574) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.00004 0.02676 0.11175 1.83479 0.47457 178.30054 summary(richDistances*110.574) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## 0.00001 0.04025 0.13215 0.56362 0.41050 111.15449 Summary We can see that the mean distance for rich people is signficiantly closer than the mean distance for poor people. That means on average, can we say that the rich neighborhoods are consistently closer to extreme weather events? From the rough summary it does indeed. After looking at histograms it seems that the distances are modeled by one of the heavy tailed solutions. Taking the logorithm allows for a better looking plot. hist(log(poorDistances*110.574), main=&quot;Poor to Nearest Event&quot;, xlab = &quot;Distance&quot;, breaks = 40) hist(log(richDistances*110.574), main=&quot;Rich to Nearest Event&quot;, xlab = &quot;Distance&quot;, breaks = 40) My assumption is that this is the lognormal distribution. Consider a random variable \\(U\\) having univariate log-normal distribution with parameters \\(\\sigma \\in \\mathbb{R}_{+}\\) \\(\\mu \\in \\mathbb{R}\\). Have \\(u \\in \\mathbb{R}_+\\), then the probability density function of random variable \\(U\\) is defined as \\[\\mathcal{LN}(u; \\mu, \\sigma) = \\frac{1}{u\\sigma\\sqrt{2\\pi}}\\exp\\left[-\\frac{(\\ln u - \\mu)^2}{2\\sigma^2} \\right].\\] Now lets compute the log(distance) and check the summary. summary(log(poorDistances*110.574)) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -10.1652 -3.6210 -2.1915 -2.1708 -0.7454 5.1835 summary(log(richDistances*110.574)) ## Min. 1st Qu. Median Mean 3rd Qu. Max. ## -11.5947 -3.2127 -2.0238 -2.0975 -0.8904 4.7109 We see a mean of -2.0975 for rich, vs -2.1708 for poor. With the log-normal assumption we can say that the rich people are actually farther away from the extreme events than poor people. However, is this really the case? Let’s compare the two mean’s together using the Student’s t-test. #Students t-test t.test(log(poorDistances*110.574),log(richDistances*110.574)) ## ## Welch Two Sample t-test ## ## data: log(poorDistances * 110.574) and log(richDistances * 110.574) ## t = -0.90295, df = 1189.6, p-value = 0.3667 ## alternative hypothesis: true difference in means is not equal to 0 ## 95 percent confidence interval: ## -0.23266887 0.08600527 ## sample estimates: ## mean of x mean of y ## -2.170832 -2.097500 Since our p-value is too large we cannot reject the null hypothesis. Therefore neither rich people or poor people are more likely to be hit with extreme weather events. "],
["understanding-the-em-algorithm.html", "Understanding the EM Algorithm 1.1 Prologue", " Understanding the EM Algorithm October 7th, 2018 The Expectation Maximization Algorithm applied to Maximum Liklihood Estimation was first conceptualized by Dempster et al. in 1977 (Maximum Likelihood from Incomplete Data via the EM Algorithm). It seeks to find MLE’s where there is missing or incomplete data. The following is a story devised to understand the EM algorithm in it’s entirety. 1.1 Prologue Suppose there exists two gaussian distributions $G_1 = (_1,_1) $ and $ G_2 = (_2,_2) $. Consider 100 points from \\(G_1\\) and \\(G_2\\) generated from sampling randomely from each distribution evenly. Let \\(\\mu_1 = 4\\), \\(\\mu_2 = 2\\), \\(\\sigma_1 = \\sigma_2 = 1\\) mu_1 &lt;- 4 mu_2 &lt;- 2 sigma_1 &lt;- 1 sigma_2 &lt;- 1 p1 &lt;- rnorm(n = 50,mean = mu_1,sd = sigma_1) p2 &lt;- rnorm(n = 50, mean = mu_2, sd = sigma_2) plot(p1,rep(0,50),ylim = c(0,1),xlim = c(-5,5)) points(p2,rep(0,50)) "]
]
